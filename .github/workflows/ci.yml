name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      backend:
        image: python:3.11
        ports:
          - 5000:5000
        options: >-
          --health-cmd="curl --fail http://localhost:5000/ || exit 1"
          --health-interval=10s
          --health-timeout=30s
          --health-retries=5
      frontend:
        image: node:18
        ports:
          - 3000:3000
        options: >-
          --health-cmd="curl --fail http://localhost:3000/ || exit 1"
          --health-interval=10s
          --health-timeout=30s
          --health-retries=5

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Backend - Install dependencies and run checks
      - name: Install backend dependencies
        run: |
          pip install -r backend/requirements.txt
      - name: Run backend tests
        run: |
          pytest backend --maxfail=3 --disable-warnings || true  # Placeholder

      # Step 3: Frontend - Install dependencies and run tests
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install
      - name: Run frontend tests
        working-directory: frontend
        run: npm test || true  # Placeholder

      # Step 4: Debugging (if CI fails)
      - name: Debug containers
        if: failure()
        run: |
          docker ps -a
          docker logs $(docker ps -aqf "name=backend")
          docker logs $(docker ps -aqf "name=frontend")









